# Preprocessing parameters (from polis pipeline)
min_votes_threshold: 7

visualization:
  flip_x: false
  flip_y: false

# NOTES:
#
#   - Any `${globals:*}` variables is set in the `globals.yml` file.
#   - A `null` value is converted to `None` in Python.
#   - When `random_state` set to null/None, a randomness generator will be used,
#     and pipelines will be non-deterministic.
#   - An `&anchor` is a named YAML reference, merged back in via `<<: *anchor`.
#   - An `input:*` value means that estimator will use that catalog item as it's input.

pipelines:
  # The original polis pipeline.
  mean_pca_bestkmeans: &polis_classic
    imputer:
      name: SimpleImputer
      strategy: mean

    reducer:
      name: PCA
      n_components: 2

    scaler:
      name: SparsityAwareScaler
      # TODO: This seems to look a bit more like Polis when raw_vote_matrix.
      X_sparse: "input:masked_vote_matrix"

    filter:
      name: SampleMaskFilter
      mask: "input:participant_mask"

    clusterer:
      name: BestKMeans
      k_bounds: [2, 5]
      random_state: ${globals:random_state}

  mean_pca_bestkmeans_alt:
    <<: *polis_classic
    scaler:
      name: NoOpScaler

    filter:
      name: NoOpFilter

  mean_pca_hdbscan:
    <<: *polis_classic
    clusterer:
      name: HDBSCAN

  mean_pca_besthdbscanflat:
    <<: *polis_classic
    clusterer:
      name: BestHDBSCANFlat
      k_bounds: [2, 5]

  mean_pacmap_kmeans:
    imputer:
      name: SimpleImputer
      strategy: mean

    reducer:
      name: PaCMAP
      n_components: 2
      n_neighbors: null

    scaler:
      name: NoOpScaler

    clusterer:
      name: KMeans
      n_clusters: 5
      random_state: ${globals:random_state}

  mean_pacmap_hdbscanflat:
    imputer:
      name: SimpleImputer
      strategy: mean

    reducer:
      name: PaCMAP
      n_components: 2
      n_neighbors: null
      random_state: ${globals:random_state}

    scaler:
      name: NoOpScaler

    clusterer:
      name: HDBSCANFlat
      n_clusters: 8
      min_cluster_size: 20

  mean_localmap_hdbscanflat:
    imputer:
      name: SimpleImputer
      strategy: mean

    reducer:
      name: LocalMAP
      n_components: 2
      n_neighbors: null
      random_state: ${globals:random_state}

    scaler:
      name: NoOpScaler

    clusterer:
      name: HDBSCANFlat
      n_clusters: 8
      min_cluster_size: 20

  mean_localmap_besthdbscanflat:
    imputer:
      name: SimpleImputer
      strategy: mean

    reducer:
      name: LocalMAP
      n_components: 2
      n_neighbors: null
      random_state: ${globals:random_state}

    scaler:
      name: NoOpScaler

    clusterer:
      name: BestHDBSCANFlat
      k_bounds: [2, 8]
      min_cluster_size: 20
      cluster_selection_method: "leaf"

  mean_localmap_bestkmeans:
    imputer:
      name: SimpleImputer
      strategy: mean

    reducer:
      name: LocalMAP
      n_components: 2
      n_neighbors: null
      random_state: ${globals:random_state}

    scaler:
      name: NoOpScaler

    clusterer:
      name: BestKMeans
      k_bounds: [2, 10]
      random_state: ${globals:random_state}

  knn5d_pacmap_besthdbscanflat:
    imputer:
      name: KNNImputer
      n_neighbors: 5
      weights: distance

    reducer:
      name: PaCMAP
      n_components: 2
      n_neighbors: null
      random_state: ${globals:random_state}

    scaler:
      name: NoOpScaler

    clusterer:
      name: BestHDBSCANFlat
      k_bounds: [2, 10]

  knn5d_pacmap_kmeans: &knn5d_pacmap_kmeans
    imputer:
      name: KNNImputer
      n_neighbors: 5
      weights: distance

    reducer: &pacmap_reducer
      name: PaCMAP
      n_components: 2
      n_neighbors: null
      random_state: ${globals:random_state}

    scaler:
      name: NoOpScaler

    clusterer:
      name: KMeans
      n_clusters: 5
      random_state: ${globals:random_state}

  knn5d_localmap_kmeans:
    <<: *knn5d_pacmap_kmeans
    reducer:
      <<: *pacmap_reducer
      name: LocalMAP
      random_state: ${globals:random_state}
